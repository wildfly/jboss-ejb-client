#
# JBoss, Home of Professional Open Source.
# Copyright 2010 Red Hat, Inc., and individual contributors
# as indicated by the @author tags.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#

###################################################################################
#
# this aims to be a complete list of configurable options for the legacy EJB client
#
###################################################################################

# endpoint
endpoint.name=endpoint.name
endpoint.create.options.org.xnio.Options.SASL_POLICY_NOANONYMOUS=false
invocation.timeout=1
username=endpoint.user
# to set the password, we set *one* of password.base64, password, or callback.handler.class
password=endpoint.password
# defining this overrides the password string (it is the same string in base64)
# password.base64=ZW5kcG9pbnQucGFzc3dvcmQNCg==
# callback.handler.class=endpoint.callback.handler.class
realm=endpoint.realm

# connections
remote.connections=one,two
remote.connectionprovider.create.options.org.xnio.Options.SSL_ENABLED=false

# connection to a node at protocol://host:port
remote.connection.one.protocol=remote
remote.connection.one.host=localhost
remote.connection.one.port=6999
remote.connection.one.connect.options.org.xnio.Options.SASL_POLICY_NOANONYMOUS=false
remote.connection.one.channel.options.org.xnio.Options.SASL_POLICY_NOANONYMOUS=false
remote.connection.one.connect.options.org.jboss.remoting3.RemotingOptions.HEARTBEAT_INTERVAL=5000
remote.connection.one.connect.options.org.xnio.Options.READ_TIMEOUT=10000
remote.connection.one.connect.options.org.xnio.Options.WRITE_TIMEOUT=10000
remote.connection.one.connect.options.org.xnio.Options.KEEP_ALIVE=true
remote.connection.one.connect.timeout=100
remote.connection.one.username=connection.one.user
# to set the password, we set *one* of password.base64, password, or callback.handler.class
remote.connection.one.password=connection.one.password
# remote.connection.one.password.base64=Y29ubmVjdGlvbi5vbmUucGFzc3dvcmQNCg==
# remote.connection.one.callback.handler.class=connection.one.callback.handler.class
remote.connection.one.realm=connection.one.realm

# connection to a node at protocol://host:port
remote.connection.two.protocol=remote
remote.connection.two.host=localhost
remote.connection.two.port=7099
remote.connection.two.connect.options.org.xnio.Options.SASL_POLICY_NOANONYMOUS=false
remote.connection.two.channel.options.org.xnio.Options.SASL_POLICY_NOANONYMOUS=false
remote.connection.two.connect.options.org.jboss.remoting3.RemotingOptions.HEARTBEAT_INTERVAL=5000
remote.connection.two.connect.options.org.xnio.Options.READ_TIMEOUT=10000
remote.connection.two.connect.options.org.xnio.Options.WRITE_TIMEOUT=10000
remote.connection.two.connect.options.org.xnio.Options.KEEP_ALIVE=true
remote.connection.two.connect.timeout=100
remote.connection.two.username=connection.two.user
# to set the password, we set *one* of password.base64, password, or callback.handler.class
# remote.connection.two.password=connection.two.password
remote.connection.two.password.base64=Y29ubmVjdGlvbi50d28ucGFzc3dvcmQ=
# remote.connection.two.callback.handler.class=connection.two.callback.handler.class
remote.connection.two.realm=connection.two.realm

# clusters
remote.clusters=ejb
remote.cluster.ejb.max-allowed-connected-nodes=1000
remote.cluster.ejb.connect.options.org.xnio.Options.SASL_POLICY_NOANONYMOUS=false
remote.cluster.ejb.channel.options.org.xnio.Options.SASL_POLICY_NOANONYMOUS=false
remote.cluster.ejb.connect.timeout=998
remote.cluster.ejb.clusternode.selector=cluster.node.selector
# security per cluster
remote.cluster.ejb.username=cluster.user
# to set the password, we set *one* of password.base64, password, or callback.handler.class
remote.cluster.ejb.password=cluster.password
# remote.cluster.ejb.password.base64=Y2x1c3Rlci5wYXNzd29yZA0K
# remote.cluster.ejb.callback.handler.class=cluster.callback.handler.class
remote.cluster.ejb.realm=cluster.realm

# cluster nodes (node1 + node2)
remote.cluster.ejb.node.node1.connect.options.org.xnio.Options.SASL_MECHANISMS=A,B,C
remote.cluster.ejb.node.node1.channel.options.org.xnio.Options.SASL_DISALLOWED_MECHANISMS=D,E
remote.cluster.ejb.node.node1.connect.timeout=999
# security per node
remote.cluster.ejb.node.node1.username=node1.user
# to set the password, we set *one* of password.base64, password, or callback.handler.class
# remote.cluster.ejb.node.node1.password=node1.password
# remote.cluster.ejb.node.node1.password.base64=bm9kZTEucGFzc3dvcmQNCg==
remote.cluster.ejb.node.node1.callback.handler.class=node1.callback.handler.class
remote.cluster.ejb.node.node1.realm=node1.realm

remote.cluster.ejb.node.node2.connect.options.org.xnio.Options.SASL_MECHANISMS=A,B,C
remote.cluster.ejb.node.node2.channel.options.org.xnio.Options.SASL_DISALLOWED_MECHANISMS=D,E
remote.cluster.ejb.node.node2.connect.timeout=999
# security per node
remote.cluster.ejb.node.node2.username=node2.user
# to set the password, se set *one* of password.base64, password, or callback.handler.class
# remote.cluster.ejb.node.node2.password=node2.password
remote.cluster.ejb.node.node2.password.base64=bm9kZTIucGFzc3dvcmQ=
# remote.cluster.ejb.node.node2.callback.handler.class=node2.callback.handler.class
remote.cluster.ejb.node.node2.realm=node2.realm
